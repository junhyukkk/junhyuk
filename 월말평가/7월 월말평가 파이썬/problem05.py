############## 주의 ##############
# 입력을 받기위한 input 함수는 절대 사용하지 않습니다.
# 내장 함수 sum 함수를 사용하지 않습니다.
# 사용시 감점처리 되니 반드시 확인 바랍니다.
def change_pwd(word, secret_code):
    pass
    # 여기에 코드를 작성하여 함수를 완성합니다.
    
    

# 아래 코드는 실행 확인을 위한 코드입니다.
if __name__ == '__main__':
    # 예시 코드는 수정하지 마세요.
    secret_code = {
        'a': 3,    'b': 8,    'c': 0,    'd': 1,
        'e': 7,    'f': 6,    'g': 7,    'h': 1,
        'i': 2,    'j': 5,    'k': 3,    'l': 6,
        'm': 5,    'n': 0,    'o': 7,    'p': 9,
        'q': 8,    'r': 2,    's': 4,    't': 9,
        'u': 6,    'v': 3,    'w': 2,    'x': 4,
        'y': 8,    'z': 1,    ' ': 0,
    }
    print(change_pwd('ssafy', secret_code)) # => 44368
    # 여기부터 아래에 추가 테스트를 위한 코드 작성 가능합니다.


def change_pwd(word, secret_code):
    result = 0
    for char in word:
        result = result * 10 + secret_code[char]
    return result

# 아래 코드는 실행 확인을 위한 코드입니다.
if __name__ == '__main__':
    secret_code = {
        'a': 3, 'b': 8, 'c': 0, 'd': 1,
        'e': 7, 'f': 6, 'g': 7, 'h': 1,
        'i': 2, 'j': 5, 'k': 3, 'l': 6,
        'm': 5, 'n': 0, 'o': 7, 'p': 9,
        'q': 8, 'r': 2, 's': 4, 't': 9,
        'u': 6, 'v': 3, 'w': 2, 'x': 4,
        'y': 8, 'z': 1, ' ': 0,
    }
    print(change_pwd('ssafy', secret_code))  # => 44368
"""
result * 10은 현재까지 구한 숫자(result)를 10의 자리로 이동시키는 과정을 나타냅니다. 
이렇게 함으로써 새로운 숫자를 더해나가는 방식으로 각 문자에 해당하는 숫자들을 이어붙여 최종적인 결과를 얻을 수 있습니다.

change_pwd 함수는 주어진 word를 순회하면서 각 문자에 대응하는 숫자를 secret_code 딕셔너리에서 가져와서 결과에 더해나가는 방식으로 작동합니다. 
처음에 result 변수를 0으로 초기화하고, 순회하면서 각 문자에 대응하는 숫자를 가져오면 해당 숫자가 result에 더해집니다.

여기서 주의해야 할 점은, result를 10으로 곱하는 것입니다. 
이렇게 함으로써 각 문자에 대응하는 숫자들이 자릿수에 맞게 이어붙여지는 효과를 얻을 수 있습니다. 
예를 들어, 처음에 result가 0이고 첫 번째 문자에 해당하는 숫자가 4라면, result에 4가 더해집니다. 
이제 두 번째 문자에 해당하는 숫자가 4라면, result는 40이 되고, 이후에 세 번째 문자에 해당하는 숫자가 3이라면, result는 403이 됩니다.
"""